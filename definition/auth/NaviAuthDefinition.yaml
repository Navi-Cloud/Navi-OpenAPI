openapi: 3.0.3
info:
  title: Navi-Cloud Authentication Microservice
  description: Navi-Cloud Authentication Microservice Definition
  version: 1.0.0
servers:
  - url: "http://localhost:8080"
    description: Server by Nginx Gateway(Server started by docker-compose)
  - url: "https://localhost:7288"
    description: Navi-Auth Local Individual Server.
tags:
  - name: User
    description: User Related Category(Join/Login/Dropout)
paths:
  /api/user/register:
    post:
      tags:
        - User
      summary: Join to Navi Server!
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        200:
          description: When register succeed!
        400:
          description: When one of required field is not valid!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                KDRExample:
                  value:
                    statusCode: 400
                    message: One of field is invalid or missing!
                    detailedMessage: Requested email is not valid email address!
        409:
          description: When user with same userEmail exists.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                KDRExample:
                  value:
                    statusCode: 409
                    message: Conflict occurred!
                    detailedMessage: Email Address 'test@test.com' already exists!
  /api/user/login:
    post:
      tags:
        - User
      summary: Login to Navi Server!
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        200:
          description: When Login succeed!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        401:
          description: When Login failed because of invalid credential
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                LoginFailureExample:
                  value:
                    statusCode: 401
                    message: Login Failed!
                    detailedMessage: Either email or password is wrong!
  /api/user:
    get:
      security:
        - NaviAuthorization: []

      tags:
        - User
      summary: Get Account Information based on requested token.
      responses:
        200:
          description: When successfully authenticated and got user's information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProjection"
components:
  schemas:
    $ref: "schemas.yaml"
  securitySchemes:
    $ref: "../GlobalSecurity.yaml"
